{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction SongslistcomponentComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"input\", 6);\n    i0.ɵɵlistener(\"click\", function SongslistcomponentComponent_div_4_Template_input_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.enable_button());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const song_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", song_r2.name, \" \");\n  }\n}\nexport class SongslistcomponentComponent {\n  constructor() {\n    this.songs_title = 'Add Songs To Your Playlist  ';\n    this.enter_new_song = 'Enter new song';\n    this.playlist_button = 'Add to Playlist';\n    this.song_button = 'Add Song';\n    this.isChecked = false;\n    this.songscounter = 0;\n    this.songs = [{\n      name: 'song1',\n      id: 1,\n      selected: false\n    }, {\n      name: 'song2',\n      id: 2,\n      selected: false\n    }, {\n      name: 'song3',\n      id: 3,\n      selected: false\n    }, {\n      name: 'song4',\n      id: 4,\n      selected: false\n    }];\n    this.onItemClicked = new EventEmitter();\n  }\n  enable_button() {\n    this.isChecked = !this.isChecked;\n  }\n  add_song_to_array(item) {\n    this.songs.push({\n      name: item,\n      id: item,\n      selected: item\n    });\n    this.songscounter = this.songs.length;\n  }\n  onClick(item) {\n    for (let i = 0; i < this.songs.length; i++) this.songs[i].selected = false;\n    this.songs[item.id - 1].selected = true;\n    this.onItemClicked.emit(item.name.item.id, item.selected);\n  }\n}\nSongslistcomponentComponent.ɵfac = function SongslistcomponentComponent_Factory(t) {\n  return new (t || SongslistcomponentComponent)();\n};\nSongslistcomponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SongslistcomponentComponent,\n  selectors: [[\"app-songslistcomponent\"]],\n  inputs: {\n    songscounter: \"songscounter\"\n  },\n  outputs: {\n    onItemClicked: \"onItemClicked\"\n  },\n  decls: 14,\n  vars: 6,\n  consts: [[\"class\", \"songs_list\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"disabled\", \"onItemClicked\"], [\"placeholder\", \"add new song\"], [\"txt\", \"\"], [\"type\", \"button\", 3, \"click\"], [1, \"songs_list\"], [\"type\", \"checkbox\", 1, \"songs_list-input\", 3, \"click\"]],\n  template: function SongslistcomponentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\");\n      i0.ɵɵtemplate(4, SongslistcomponentComponent_div_4_Template, 3, 1, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"onItemClicked\", function SongslistcomponentComponent_Template_button_onItemClicked_5_listener() {\n        return ctx.onClick(ctx.songs);\n      });\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelement(10, \"input\", 2, 3);\n      i0.ɵɵelementStart(12, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function SongslistcomponentComponent_Template_button_click_12_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r1 = i0.ɵɵreference(11);\n        return i0.ɵɵresetView(ctx.add_song_to_array(_r1.value));\n      });\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.songs_title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.isChecked);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.playlist_button);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.enter_new_song, \" \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.song_button);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;;;ICG9DC,8BAAmD;IACCA;MAAAA;MAAA;MAAA,OAASA,qCAAe;IAAA,EAAC;IAAzEA,iBAA2E;IAACA,YAChF;IAAAA,iBAAM;;;;IAD0EA,eAChF;IADgFA,6CAChF;;;ADER,OAAM,MAAOC,2BAA2B;EALxCC;IAMA,gBAAW,GAAW,8BAA8B;IACpD,mBAAc,GAAG,gBAAgB;IACjC,oBAAe,GAAG,iBAAiB;IACnC,gBAAW,GAAC,UAAU;IACf,cAAS,GAAW,KAAK;IAEhC,iBAAY,GAAU,CAAC;IAEvB,UAAK,GAAE,CACL;MAACC,IAAI,EAAE,OAAO;MAACC,EAAE,EAAE,CAAC;MAACC,QAAQ,EAAE;IAAK,CAAC,EACrC;MAACF,IAAI,EAAE,OAAO;MAACC,EAAE,EAAE,CAAC;MAACC,QAAQ,EAAE;IAAK,CAAC,EACrC;MAACF,IAAI,EAAE,OAAO;MAACC,EAAE,EAAE,CAAC;MAACC,QAAQ,EAAE;IAAK,CAAC,EACrC;MAACF,IAAI,EAAE,OAAO;MAACC,EAAE,EAAE,CAAC;MAACC,QAAQ,EAAE;IAAK,CAAC,CACtC;IAUS,kBAAa,GAAyB,IAAIN,YAAY,EAAU;;EAT1EO,aAAa;IACb,IAAI,CAACC,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;EAChC;EAEAC,iBAAiB,CAACC,IAAS;IACzB,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC;MAACR,IAAI,EAACM,IAAI;MAACL,EAAE,EAACK,IAAI;MAACJ,QAAQ,EAACI;IAAI,CAAC,CAAC;IAClD,IAAI,CAACG,YAAY,GAAG,IAAI,CAACF,KAAK,CAACG,MAAM;EACvC;EAGAC,OAAO,CAACL,IAAS;IACf,KAAM,IAAIM,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACL,KAAK,CAACG,MAAM,EAAEE,CAAC,EAAE,EACvC,IAAI,CAACL,KAAK,CAACK,CAAC,CAAC,CAACV,QAAQ,GAAG,KAAK;IAC9B,IAAI,CAACK,KAAK,CAACD,IAAI,CAACL,EAAE,GAAE,CAAC,CAAC,CAACC,QAAQ,GAAG,IAAI;IACtC,IAAI,CAACW,aAAa,CAACC,IAAI,CAACR,IAAI,CAACN,IAAI,CAAEM,IAAI,CAACL,EAAE,EAAEK,IAAI,CAACJ,QAAQ,CAAC;EAC5D;;AA9BaJ,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAiB;EAAAC;IAAAP;EAAA;EAAAQ;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;;MCPxCxB,2BAAK;MACGA,YAAe;MAAAA,iBAAK;MACxBA,4BAAM;MACFA,4EAEM;MACXA,iBAAO;MACNA,iCAAgF;MAAlCA;QAAA,OAAiByB,sBAAc;MAAA,EAAC;MAAEzB,YAAmB;MAAAA,iBAAS;MAAAA,qBAAI;MAChHA,yBAAG;MACCA,YACA;MAAAA,+BAAuC;MACvCA,kCAA2D;MAAnDA;QAAAA;QAAA;QAAA,OAAQA,+CAA4B;MAAA;MAAeA,aAAe;MAAAA,iBAAS;;;MAVnFA,eAAe;MAAfA,qCAAe;MAE0BA,eAAQ;MAARA,mCAAQ;MAI/BA,eAAuB;MAAvBA,yCAAuB;MAAmCA,eAAmB;MAAnBA,yCAAmB;MAE/FA,eACA;MADAA,mDACA;MAC2DA,eAAe;MAAfA,qCAAe","names":["EventEmitter","i0","SongslistcomponentComponent","constructor","name","id","selected","enable_button","isChecked","add_song_to_array","item","songs","push","songscounter","length","onClick","i","onItemClicked","emit","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\workspace_SriPriyaPedada\\angular_projects\\02_fed_assignment\\src\\app\\songslistcomponent\\songslistcomponent.component.ts","E:\\workspace_SriPriyaPedada\\angular_projects\\02_fed_assignment\\src\\app\\songslistcomponent\\songslistcomponent.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-songslistcomponent',\n  templateUrl: './songslistcomponent.component.html',\n  styleUrls: ['./songslistcomponent.component.css']\n})\nexport class SongslistcomponentComponent {\nsongs_title: string = 'Add Songs To Your Playlist  ';\nenter_new_song = 'Enter new song';\nplaylist_button = 'Add to Playlist';\nsong_button='Add Song';\npublic isChecked:boolean = false;\n@Input()\nsongscounter: Number =0;\n\nsongs =[\n  {name: 'song1',id: 1,selected: false},\n  {name: 'song2',id: 2,selected: false},\n  {name: 'song3',id: 3,selected: false},\n  {name: 'song4',id: 4,selected: false},\n];\nenable_button(){\nthis.isChecked = !this.isChecked;\n}\n\nadd_song_to_array(item: any){\n  this.songs.push({name:item,id:item,selected:item})\n  this.songscounter = this.songs.length;\n}\n\n@Output() onItemClicked: EventEmitter<string> = new EventEmitter<string>();\nonClick(item: any){\n  for ( let i=0; i<this.songs.length; i++)\n  this.songs[i].selected = false;\n  this.songs[item.id -1].selected = true;\n  this.onItemClicked.emit(item.name. item.id, item.selected);\n}\n\n}\n","<div>\n    <h2>{{songs_title}}</h2>\n    <form>\n        <div class=\"songs_list\" *ngFor=\"let song of songs\">\n            <input class=\"songs_list-input\" type=\"checkbox\" (click)=\"enable_button()\" > {{song.name}}\n        </div>\n   </form>\n    <button type=\"button\" [disabled]=\"!isChecked\" (onItemClicked)=\"onClick(songs)\" >{{playlist_button}}</button><br>\n    <p>\n        {{enter_new_song}}\n        <input placeholder=\"add new song\" #txt>\n        <button (click)=add_song_to_array(txt.value) type=\"button\">{{song_button}}</button>\n    </p>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}