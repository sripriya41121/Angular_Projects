{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction SongslistcomponentComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"input\", 6);\n    i0.ɵɵlistener(\"click\", function SongslistcomponentComponent_div_3_Template_input_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.enable_button());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const song_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", song_r2.name, \" \");\n  }\n}\nexport class SongslistcomponentComponent {\n  constructor() {\n    this.songs_title = 'Add Songs To Your Playlist  ';\n    this.enter_new_song = 'Enter New Song : ';\n    this.playlist_button = 'Add To Playlist';\n    this.song_button = 'Add Song';\n    this.isChecked = false;\n    this.songs = [{\n      id: 1,\n      name: 'song1',\n      selected: false\n    }, {\n      id: 2,\n      name: 'song2',\n      selected: false\n    }, {\n      id: 3,\n      name: 'song3',\n      selected: false\n    }, {\n      id: 4,\n      name: 'song4',\n      selected: false\n    }];\n    this.addSong = new EventEmitter();\n    this.addPlaylist = new EventEmitter();\n  }\n  enable_button() {\n    for (let i = 0; i < this.songs.length || this.songs[i].selected == true; i++) this.isChecked = true;\n  }\n  add_song_to_array(item) {\n    this.songs.push({\n      name: item,\n      id: item,\n      selected: item\n    });\n    this.addSong.emit(this.songs.length);\n  }\n  add_song_to_playlist(item) {\n    for (let i = 0; i < this.songs.length; i++) if (this.songs[i].selected == true) this.addPlaylist.emit(this.songs[i].name);\n  }\n}\nSongslistcomponentComponent.ɵfac = function SongslistcomponentComponent_Factory(t) {\n  return new (t || SongslistcomponentComponent)();\n};\nSongslistcomponentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SongslistcomponentComponent,\n  selectors: [[\"app-songslistcomponent\"]],\n  outputs: {\n    addSong: \"addSong\",\n    addPlaylist: \"addPlaylist\"\n  },\n  decls: 14,\n  vars: 6,\n  consts: [[\"class\", \"songs_list\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"click\"], [\"placeholder\", \"add new song\"], [\"txt\", \"\"], [3, \"click\"], [1, \"songs_list\"], [\"type\", \"checkbox\", 3, \"click\"]],\n  template: function SongslistcomponentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, SongslistcomponentComponent_div_3_Template, 3, 1, \"div\", 0);\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function SongslistcomponentComponent_Template_button_click_5_listener() {\n        return ctx.add_song_to_playlist(ctx.songs);\n      });\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelement(10, \"input\", 2, 3);\n      i0.ɵɵelementStart(12, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function SongslistcomponentComponent_Template_button_click_12_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r1 = i0.ɵɵreference(11);\n        return i0.ɵɵresetView(ctx.add_song_to_array(_r1.value));\n      });\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.songs_title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.isChecked);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.playlist_button);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.enter_new_song, \" \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.song_button);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;;;ICE9DC,8BAAmD;IACxBA;MAAAA;MAAA;MAAA,OAASA,qCAAe;IAAA,EAAC;IAAhDA,iBAAiD;IAACA,YAClD;IACJA,iBAAM;;;;IAFgDA,eAClD;IADkDA,6CAClD;;;ADGZ,OAAM,MAAOC,2BAA2B;EALxCC;IAMA,gBAAW,GAAW,8BAA8B;IACpD,mBAAc,GAAG,mBAAmB;IACpC,oBAAe,GAAG,iBAAiB;IACnC,gBAAW,GAAC,UAAU;IACtB,cAAS,GAAW,KAAK;IACzB,UAAK,GAAE,CACL;MAACC,EAAE,EAAE,CAAC;MAACC,IAAI,EAAE,OAAO;MAACC,QAAQ,EAAE;IAAK,CAAC,EACrC;MAACF,EAAE,EAAE,CAAC;MAACC,IAAI,EAAE,OAAO;MAACC,QAAQ,EAAE;IAAK,CAAC,EACrC;MAACF,EAAE,EAAE,CAAC;MAACC,IAAI,EAAE,OAAO;MAACC,QAAQ,EAAE;IAAK,CAAC,EACrC;MAACF,EAAE,EAAE,CAAC;MAACC,IAAI,EAAE,OAAO;MAACC,QAAQ,EAAE;IAAK,CAAC,CACtC;IAOS,YAAO,GAAyB,IAAIN,YAAY,EAAU;IAM1D,gBAAW,GAAyB,IAAIA,YAAY,EAAU;;EAXxEO,aAAa;IACX,KAAM,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACC,KAAK,CAACC,MAAM,IAAI,IAAI,CAACD,KAAK,CAACD,CAAC,CAAC,CAACF,QAAQ,IAAE,IAAI,EAAEE,CAAC,EAAE,EAClE,IAAI,CAACG,SAAS,GAAG,IAAI;EAC5B;EAGAC,iBAAiB,CAACC,IAAS;IACzB,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAC;MAACT,IAAI,EAACQ,IAAI;MAACT,EAAE,EAACS,IAAI;MAACP,QAAQ,EAACO;IAAI,CAAC,CAAC;IAClD,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,IAAI,CAACP,KAAK,CAACC,MAAM,CAAC;EACtC;EAGAO,oBAAoB,CAACJ,IAAS;IAC5B,KAAM,IAAIL,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACC,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EACrC,IAAG,IAAI,CAACC,KAAK,CAACD,CAAC,CAAC,CAACF,QAAQ,IAAI,IAAI,EAC/B,IAAI,CAACY,WAAW,CAACF,IAAI,CAAC,IAAI,CAACP,KAAK,CAACD,CAAC,CAAC,CAACH,IAAI,CAAC;EAC/C;;AA7BaH,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAiB;EAAAC;IAAAL;IAAAG;EAAA;EAAAG;EAAAC;EAAAC;EAAAC;IAAA;;MCPxCvB,2BAAK;MACGA,YAAe;MAAAA,iBAAK;MACpBA,4EAGM;MACVA,qBAAI;MAAAA,iCAAuE;MAAvCA;QAAA,OAASwB,mCAA2B;MAAA,EAAC;MAAExB,YAAmB;MAAAA,iBAAS;MAAAA,qBAAI;MAC3GA,yBAAG;MAACA,YACA;MAAAA,+BAAuC;MACvCA,kCAA6C;MAArCA;QAAAA;QAAA;QAAA,OAAQA,+CAA4B;MAAA;MAACA,aAAe;MAAAA,iBAAS;;;MARrEA,eAAe;MAAfA,qCAAe;MAC0BA,eAAQ;MAARA,mCAAQ;MAIzCA,eAAuB;MAAvBA,yCAAuB;MAAwCA,eAAmB;MAAnBA,yCAAmB;MAC1FA,eACA;MADAA,mDACA;MAC6CA,eAAe;MAAfA,qCAAe","names":["EventEmitter","i0","SongslistcomponentComponent","constructor","id","name","selected","enable_button","i","songs","length","isChecked","add_song_to_array","item","push","addSong","emit","add_song_to_playlist","addPlaylist","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\workspace_SriPriyaPedada\\angular_projects\\02_fed_assignment\\src\\app\\songslistcomponent\\songslistcomponent.component.ts","E:\\workspace_SriPriyaPedada\\angular_projects\\02_fed_assignment\\src\\app\\songslistcomponent\\songslistcomponent.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-songslistcomponent',\n  templateUrl: './songslistcomponent.component.html',\n  styleUrls: ['./songslistcomponent.component.css']\n})\nexport class SongslistcomponentComponent {\nsongs_title: string = 'Add Songs To Your Playlist  ';\nenter_new_song = 'Enter New Song : ';\nplaylist_button = 'Add To Playlist';\nsong_button='Add Song';\nisChecked:boolean = false;\nsongs =[\n  {id: 1,name: 'song1',selected: false},\n  {id: 2,name: 'song2',selected: false},\n  {id: 3,name: 'song3',selected: false},\n  {id: 4,name: 'song4',selected: false},\n];\n\nenable_button(){\n  for ( let i=0; i<this.songs.length || this.songs[i].selected==true; i++)\n       this.isChecked = true\n}\n\n@Output() addSong: EventEmitter<number> = new EventEmitter<number>();\nadd_song_to_array(item: any){\n  this.songs.push({name:item,id:item,selected:item});\n  this.addSong.emit(this.songs.length);\n}\n\n@Output() addPlaylist: EventEmitter<string> = new EventEmitter<string>();\nadd_song_to_playlist(item: any){\n  for ( let i=0; i<this.songs.length; i++)\n    if(this.songs[i].selected == true)\n      this.addPlaylist.emit(this.songs[i].name);\n}\n\n}\n","<div>\n    <h2>{{songs_title}}</h2>\n        <div class=\"songs_list\" *ngFor=\"let song of songs\">\n            <input type=\"checkbox\" (click)=\"enable_button()\"> {{song.name}}\n            <!-- Need Condition check for multiple checkbox selection-->\n        </div>    \n    <br><button [disabled]=\"!isChecked\" (click)=\"add_song_to_playlist(songs)\" >{{playlist_button}}</button><br>\n    <p> {{enter_new_song}}\n        <input placeholder=\"add new song\" #txt>\n        <button (click)=add_song_to_array(txt.value)>{{song_button}}</button>\n    </p>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}